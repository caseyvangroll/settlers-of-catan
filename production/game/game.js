const _=require("underscore"),helpers=require("./helpers"),Vertex=require("./vertex.js"),Resource=require("./resource.js");class Game{constructor(){this.MAX_PLAYERS=4,this.state="setup",this.resources=Array.apply(null,Array(19)).map((_,i)=>String.fromCharCode(65+i)).reduce((acc,cur)=>(acc[cur]=new Resource(cur),acc),{}),this.resources.ids=Object.keys(this.resources),this.vertices=Array.apply(null,Array(54)).map((_,i)=>i+1).reduce((acc,cur)=>(acc[cur]=new Vertex(cur),acc),{}),this.vertices.ids=Object.keys(this.vertices),helpers.idMap.forEach(mapping=>{for(let i=0;i<mapping.vertices.length;i+=1){const r=mapping.resource,v1=mapping.vertices[i],buddy=i+1===mapping.vertices.length?0:i+1,v2=mapping.vertices[buddy];this.resources[r].addVertex(v1),this.vertices[v1].addResource(r),this.vertices[v1].addEdge(v2),this.vertices[v2].addEdge(v1)}}),this.players={}}viewOf(){const view=_.pick(this,["resources","state","vertices"]);return JSON.stringify(view)}}module.exports=Game;